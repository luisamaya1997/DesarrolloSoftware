  /*ATRIBUTOS*/
        private int RTN;
        private string Nombre;
        private string Apellido;
        private char Sexo;
        private string Telefono;
        private string Direccion;
        private string Correo;
        private string TipoCliente;
        private string Identidad;

        ConexionSql acceso = new ConexionSql();

        /*METODO CONSTRUCTOR*/
        public Cliente()
        {

        }

        /*METODOS GET Y SET*/
        public string Nombre1 { get => Nombre; set => Nombre = value; }
        public string Apellido1 { get => Apellido; set => Apellido = value; }
        public char Sexo1 { get => Sexo; set => Sexo = value; }
        public string Telefono1 { get => Telefono; set => Telefono = value; }
        public string Direccion1 { get => Direccion; set => Direccion = value; }
        public string Correo1 { get => Correo; set => Correo = value; }
        public string TipoCliente1 { get => TipoCliente; set => TipoCliente = value; }
        public string Identidad1 { get => Identidad; set => Identidad = value; }
        public int RTN1 { get => RTN; set => RTN = value; }


        /*METODOS*/

          /*Llenar datagrid*/
        public void Agregar(int RTN, string Nom, string Ape, char Sexo, string tel, string dir, string email, string Tipo, string Id)
        {
            DataTable llenar = new DataTable();
            try
            {
                /*LLAMADA DEL PROCEDIMIENTO Y SUS PARAMETROS A C#*/
                SqlConnection conectar = new SqlConnection(acceso.cadena);
                SqlCommand comando = new SqlCommand("InsertarCliente", conectar);
                comando.CommandType = CommandType.StoredProcedure;
                comando.Parameters.Add("@RTN", SqlDbType.Int);
                comando.Parameters.Add("@Nombre", SqlDbType.NVarChar, 80);
                comando.Parameters.Add("@Apellido", SqlDbType.NVarChar, 80);
                comando.Parameters.Add("@Sexo", SqlDbType.Char, 1);
                comando.Parameters.Add("@Telefono", SqlDbType.Char, 12);
                comando.Parameters.Add("@Direccion", SqlDbType.VarChar, 150);
                comando.Parameters.Add("@Correo", SqlDbType.VarChar, 80);
                comando.Parameters.Add("@TipoCliente", SqlDbType.VarChar, 9);
                comando.Parameters.Add("@Identidad", SqlDbType.NVarChar, 13);
                /*PASO DE PARAMETROS A LA TABLA EN SQL*/
                comando.Parameters["@RTN"].Value = RTN;
                comando.Parameters["@Nombre"].Value = Nom;
                comando.Parameters["@Apellido"].Value = Ape;
                comando.Parameters["@Sexo"].Value = Sexo;
                comando.Parameters["@Telefono"].Value = tel;
                comando.Parameters["@Direccion"].Value = dir;
                comando.Parameters["@Correo"].Value = email;
                comando.Parameters["@TipoCliente"].Value = Tipo;
                comando.Parameters["@Identidad"].Value = Id;
                conectar.Open();
                llenar.Load(comando.ExecuteReader());

                MessageBox.Show("El cliente: " + Nombre1 + " " + Apellido1 + " " + "ha sido registrado correctamente");
                conectar.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            
        }

        
        public DataTable BusquedaCliente(Int64 RTN)
        {
            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter();
            SqlConnection con = new SqlConnection(acceso.cadena);
            DataSet ds = new DataSet();
            da.SelectCommand = new SqlCommand("SELECT * FROM Clientes WHERE RTN = " + RTN, con);
            da.Fill(ds);
            dt = ds.Tables[0];
            return dt;
        }

        public DataTable InsertarTabla(Int64 pr)
        {
            DataTable ta = new DataTable();
            DataSet dse = new DataSet();
            SqlDataAdapter dap = new SqlDataAdapter();
            SqlConnection con = new SqlConnection(acceso.cadena);
            SqlCommand co = new SqlCommand("CargarClientes",con);
            co.CommandType = CommandType.StoredProcedure;
            co.Parameters.Add("@RTN", SqlDbType.Int);
            co.Parameters["@RTN"].Value = pr;
            con.Open();
            ta.Load(co.ExecuteReader());
            con.Close();
            return ta;
        }


        public void EliminarCliente(int RTN)
        {
            SqlConnection c = new SqlConnection(acceso.cadena);
            string query = "DELETE FROM Clientes WHERE RTN="+RTN;
            SqlCommand com = new SqlCommand(query,c);
            c.Open();
            com.ExecuteNonQuery();
            c.Close();
            MessageBox.Show("registro eliminado del sistema");
        } 